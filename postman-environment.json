{
  "id": "codingit-environment",
  "name": "CodingIT Environment",
  "values": [
    {
      "key": "BASE_URL",
      "value": "http://localhost:3000",
      "description": "Base URL for the CodingIT API",
      "type": "default",
      "enabled": true
    },
    {
      "key": "PRODUCTION_URL",
      "value": "https://codingit.vercel.app",
      "description": "Production URL for the CodingIT API",
      "type": "default",
      "enabled": false
    },
    {
      "key": "E2B_API_KEY",
      "value": "",
      "description": "E2B API key for sandbox creation and management",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "SUPABASE_URL",
      "value": "",
      "description": "Supabase project URL",
      "type": "default",
      "enabled": true
    },
    {
      "key": "SUPABASE_ANON_KEY",
      "value": "",
      "description": "Supabase anonymous/public key",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "supabase_access_token",
      "value": "",
      "description": "Supabase user session access token (obtained after login)",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "GITHUB_CLIENT_ID",
      "value": "",
      "description": "GitHub OAuth application client ID",
      "type": "default",
      "enabled": true
    },
    {
      "key": "GITHUB_CLIENT_SECRET",
      "value": "",
      "description": "GitHub OAuth application client secret",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "GITHUB_WEBHOOK_SECRET",
      "value": "",
      "description": "GitHub webhook secret for signature verification",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "github_code",
      "value": "",
      "description": "GitHub OAuth authorization code (temporary)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "github_state",
      "value": "",
      "description": "GitHub OAuth state parameter (temporary)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "github_access_token",
      "value": "",
      "description": "GitHub user access token (obtained after OAuth)",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "anthropic_api_key",
      "value": "",
      "description": "Anthropic API key for Claude models",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "openai_api_key",
      "value": "",
      "description": "OpenAI API key for GPT models",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "google_api_key",
      "value": "",
      "description": "Google API key for Gemini models",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "user_id",
      "value": "",
      "description": "Current user ID (auto-generated or from auth)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "team_id",
      "value": "",
      "description": "Team ID for multi-user workspaces",
      "type": "default",
      "enabled": true
    },
    {
      "key": "session_id",
      "value": "",
      "description": "Session ID for sandbox operations (auto-generated)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "sandbox_id",
      "value": "",
      "description": "Active sandbox ID (auto-captured from responses)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "workflow_id",
      "value": "",
      "description": "Workflow ID for workflow operations",
      "type": "default",
      "enabled": true
    },
    {
      "key": "execution_id",
      "value": "",
      "description": "Workflow execution ID (auto-captured)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "deployment_id",
      "value": "",
      "description": "Deployment ID for deployment operations",
      "type": "default",
      "enabled": true
    },
    {
      "key": "fragment_id",
      "value": "",
      "description": "Fragment ID for tracking generated fragments",
      "type": "default",
      "enabled": true
    },
    {
      "key": "debug_session_id",
      "value": "",
      "description": "Debug session ID for error analysis",
      "type": "default",
      "enabled": true
    },
    {
      "key": "owner",
      "value": "octocat",
      "description": "GitHub repository owner for testing",
      "type": "default",
      "enabled": true
    },
    {
      "key": "repo",
      "value": "Hello-World",
      "description": "GitHub repository name for testing",
      "type": "default",
      "enabled": true
    },
    {
      "key": "file_path",
      "value": "README.md",
      "description": "File path in GitHub repository",
      "type": "default",
      "enabled": true
    },
    {
      "key": "webhook_signature",
      "value": "",
      "description": "GitHub webhook signature (auto-generated)",
      "type": "default",
      "enabled": true
    },
    {
      "key": "HUGGINGFACE_TOKEN",
      "value": "",
      "description": "HuggingFace API token for dataset imports",
      "type": "secret",
      "enabled": true
    },
    {
      "key": "RATE_LIMIT_MAX_REQUESTS",
      "value": "10",
      "description": "Maximum requests per window for rate limiting",
      "type": "default",
      "enabled": true
    },
    {
      "key": "RATE_LIMIT_WINDOW",
      "value": "1d",
      "description": "Rate limit window duration",
      "type": "default",
      "enabled": true
    },
    {
      "key": "NEXT_PUBLIC_SITE_URL",
      "value": "{{BASE_URL}}",
      "description": "Public site URL for webhooks and redirects",
      "type": "default",
      "enabled": true
    },
    {
      "key": "SUPABASE_SERVICE_ROLE_KEY",
      "value": "",
      "description": "Supabase service role key for server operations",
      "type": "secret",
      "enabled": true
    }
  ],
  "_postman_variable_scope": "environment"
}