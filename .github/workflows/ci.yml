name: Pull CodinIT Docker Image

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Daily at midnight
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: gerome-elassaad/codinit-app
  IMAGE_TAG: sha-052c2ec

jobs:
  pull-and-test:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker image
        run: |
          echo "Pulling image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Verify image
        run: |
          docker images | grep ${{ env.IMAGE_NAME }}
          docker inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Run image (optional)
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --version || true

      - name: Tag image locally (optional)
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} codinit-app:latest
          docker images

  pull-private-image:
    runs-on: ubuntu-latest
    # Use this job if the image is private and needs PAT
    # Required secrets: GHCR_USERNAME, GHCR_PAT
    # Add these in: Settings > Secrets and variables > Actions
    if: false # Set to true to enable

    steps:
      - name: Log in to GHCR with PAT
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }} # Add in repo secrets
          password: ${{ secrets.GHCR_PAT }}      # Add in repo secrets

      - name: Pull private image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy-with-image:
    runs-on: ubuntu-latest
    needs: pull-and-test

    steps:
      - name: Pull and run container
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker run -d \
            --name codinit-app \
            -p 5173:5173 \
            -e NODE_ENV=production \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Wait for container to be ready
        run: |
          timeout 60 bash -c 'until docker logs codinit-app 2>&1 | grep -q "ready"; do sleep 2; done' || true

      - name: Test container health
        run: |
          docker ps -a
          docker logs codinit-app

      - name: Cleanup
        if: always()
        run: |
          docker stop codinit-app || true
          docker rm codinit-app || true
